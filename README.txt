
AWS API Gateway + Lambda + VPC Automation 

This project automates the deployment of AWS infrastructure using Python. It sets up an API Gateway with routes that invoke a Lambda function, which can create a VPC, subnets, and S3 bucket.

Features:

- API Gateway with routes:
  - POST /create-vpc → Creates a VPC and subnets
  - GET /vpc-info → Fetches VPC info from S3
- Lambda function that executes Python code for resource provisioning
- Automatic Lambda deployment with dependencies (e.g., requests)
- Infrastructure code modularized by service (VPC, S3, Lambda, API Gateway)
- Deployment automation with Makefile or one-click Python deploy script

Project Structure:

aws-api-python/
├── Makefile                   : Manual step runner
├── deploy.py                  : One-click full deployment script
├── requirements.txt           : Python dependencies
├── build_lambda.sh            : Lambda packaging with dependencies
├── test.sh                    : Sample curl tests for API
├── lambda/
│   ├── lambda_function.py     : Lambda handler code
│   └── lambda.zip             : (Auto-generated by build script)
└── python/
    ├── create_vpc.py
    ├── create_s3_bucket.py
    ├── create_lambda.py
    └── api_gateway.py

Setup Instructions:

1. Prerequisites:
   - Python 3.8+
   - AWS CLI configured (aws configure)
   - IAM role ARN with access to Lambda, EC2, S3, API Gateway

2. Configure Your Lambda:
   - Edit placeholders in:
     * create_lambda.py: <iam_role_arn>, <your_s3_bucket_name>
     * api_gateway.py: <lambda_function_arn>

3. Build Lambda Deployment Package:
   bash build_lambda.sh

4. Deploy Infrastructure:

   Option 1: One-click deploy (Recommended)
   python deploy.py

   Option 2: Step-by-step via Makefile
   make create_vpc
   make create_s3_bucket
   make create_lambda
   make create_api_gateway

5. Test the API:
   - Edit and run test.sh with your API URL and key
   bash test.sh

AWS Services Used:
- Lambda (Python handler)
- API Gateway (HTTP API with routes)
- S3 (stores VPC details)
- EC2 (VPC + Subnet creation via boto3)

Requirements:
pip install -r requirements.txt

Notes:
- Always regenerate lambda.zip after changing lambda_function.py or dependencies
- Use IAM roles securely (avoid hardcoded secrets)

Need More?
- Terraform or CDK deployment
- GitHub Actions CI/CD
- Docker packaging
